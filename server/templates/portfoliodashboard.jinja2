{% extends "base.html" %}

{% block css %}
<link rel="stylesheet" href="{{ url_for('static', filename='css/snippet.css') }}">
<link href="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
{% endblock %}

{% block script %}
<script src="{{ url_for('static', filename='js/snippet.js') }}"></script>
<script src="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>
  <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
  <script type="text/javascript">
    google.charts.load("current", {packages:['corechart', 'line']});
    google.charts.setOnLoadCallback(drawChart);
    function drawChart() {
      var weighting = {{ weightings }};
      var data = google.visualization.arrayToDataTable([
        ["Index", "Value", { role: "style" } ],
        ["Copper", parseFloat(weighting[0]), "#b87333"],
        ["Silver", parseFloat(weighting[1]), "silver"],
        ["Gold", parseFloat(weighting[2]), "gold"],
        ["Platinum", parseFloat(weighting[3]), "color: #e5e4e2"]
      ]);

      var view = new google.visualization.DataView(data);
      view.setColumns([0, 1,
                       { calc: "stringify",
                         sourceColumn: 1,
                         type: "string",
                         role: "annotation" },
                       2]);

      var options = {
        title: "Weightings",
        width: 600,
        height: 400,
        bar: {groupWidth: "95%"},
        legend: { position: "none" },
      };
      var chart = new google.visualization.ColumnChart(document.getElementById("columnchart_values"));
      chart.draw(view, options);
  }
  </script>
      <script language = "JavaScript">
         function drawChart() {
            var arr = (function () { /*{{ histValues[-1] }}*/}).toString().split('\n').slice(1,-1).join('\n').split('...').join(" ").split("\n")

            // Define the chart to be drawn.
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Month');
            data.addColumn('number', 'Tokyo');
            var table = new Array;
            for(var i = 0, len = arr.length; i < len; i++){
                var cur = arr[i].trim().split(" ");
                table.push(new Array(cur[0], parseFloat(cur[5])));
            }               
            data.addRows(table);
               
            // Set chart options
            var options = {'title' : 'histValues[-1]',
               hAxis: {
                  title: 'Date'
               },
               vAxis: {
                  title: 'Value'
               },   
               'width':550,
               'height':400   
            };

            // Instantiate and draw the chart.
            var chart = new google.visualization.LineChart(document.getElementById('container'));
            chart.draw(data, options);
         }
         google.charts.setOnLoadCallback(drawChart);
      </script>
      </script>
      <script language = "JavaScript">
         function drawChart() {
            var arr = (function () { /*{{ histValues }}*/}).toString().split('\n').slice(1,-1).join('\n').split('...').join(" ").split("\n")

            // Define the chart to be drawn.
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Month');
            data.addColumn('number', 'Tokyo');
            var table = new Array;
            for(var i = 0, len = arr.length; i < len; i++){
                var cur = arr[i].trim().split(" ");
                table.push(new Array(cur[0], parseFloat(cur[5])));
            }               
            data.addRows(table);
               
            // Set chart options
            var options = {'title' : 'histValues',
               hAxis: {
                  title: 'Date'
               },
               vAxis: {
                  title: 'Value'
               },   
               'width':550,
               'height':400   
            };

            // Instantiate and draw the chart.
            var chart = new google.visualization.LineChart(document.getElementById('container2'));
            chart.draw(data, options);
         }
         google.charts.setOnLoadCallback(drawChart);
      </script>
{% endblock %}

{% block content %}
    <form action="/editportfolio" method="get">

        <!-- Not Displayed -->
        <div style="display: none;">
            <input type="text" name="initialInvestment" value="{{ questionnaire["initialInvestment"] }}">
            <input type="text" name="purchaseAmount" value="{{ questionnaire["purchaseAmount"] }}">
            <input type="text" name="purchaseDate" value="{{ questionnaire["purchaseDate"] }}">
            <input type="text" name="retirementAmount" value="{{ questionnaire["retirementAmount"] }}">
            <input type="text" name="retirementDate" value="{{ questionnaire["retirementDate"] }}">
            <input type="text" name="riskAppetite" value="{{ questionnaire["riskAppetite"] }}">
            <input type="text" name="option" value="{{ option }}">
            <input type="text" name="portfolioName" value="{{ portfolioName }}">
        </div>
        <!-- Above is not displayed -->

        <div>
            {{ portfolioName }}
        </div>
        <div class="container">
    <center><div id = "container" style = "width: 550px; height: 400px; margin: 0 auto"></div></center>
    <center><div id = "container2" style = "width: 550px; height: 400px; margin: 0 auto"></div></center>
    <center><div id="columnchart_values" style="width: 900px; height: 300px;"></div></center>
    <br><br><br>

    <div class="row">
        <div class="MultiCarousel" data-items="1,3,5,6" data-slide="1" id="MultiCarousel"  data-interval="1000">
            <div class="MultiCarousel-inner">

                <div class="item">
                    <div class="pad15">
                        <p class="lead">returnSinceInception</p>
                        <p>{{ returnSinceInception }}</p>
                    </div>
                </div>
                <div class="item">
                    <div class="pad15">
                        <p class="lead">expectedVol</p>
                        <p>{{ expectedVol }}</p>
                    </div>
                </div>
                <div class="item">
                    <div class="pad15">
                        <p class="lead">weightings</p>
                        <p>{{ weightings }}</p>
                    </div>
                </div>
                <div class="item">
                    <div class="pad15">
                        <p class="lead">long</p>
                        <p>{{ long }}</p>
                    </div>
                </div>
                <div class="item">
                    <div class="pad15">
                        <p class="lead">short</p>
                        <p>{{ short }}</p>
                    </div>
                </div>
            </div>
            <button class="btn btn-primary leftLst"><</button>
            <button class="btn btn-primary rightLst">></button>
        </div>
    </div>
</div>
        <input type="submit" value="Edit">
    </form>
{% endblock %}